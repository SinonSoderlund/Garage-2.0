﻿@using Microsoft.EntityFrameworkCore.Metadata.Internal

@model UnitedIndexViewCollection

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<!-- Start: Adding Search field-->
<form asp-action="SearchByRegNumber" method="get" class="mb-3">
    <label for="search">Search by Registration number:</label>
    <div class="input-group mb-3">
        <input type="text" name="searchField" class="form-control" placeholder="Enter registration number"/>
        <button class="btn btn-outline-secondary" type="submit">Search</button>
    </div>
</form>
<!-- End: Adding Search field-->
<!-- Start: Adding Sorting field-->
<div class="mb-3">
    <button onclick="location.href='@Url.Action("SortByDateAscending", "Vehicles")'" class="btn btn-primary">
        Sort by Date Ascending
    </button>
    <button onclick="location.href='@Url.Action("SortByDateDescending", "Vehicles")'" class="btn btn-primary">
        Sort by Date Descending
    </button>
</div>

<!-- End: Adding Sorting field-->
<!-- Start: filter by vehicle type-->
<form asp-action="FilterByVehicleType" method="get" class="mb-3">
    <label for="vehicleType">Filter by Vehicle Type:</label>
    <select name="vehicleType" class="form-select" id="vehicleType">
        <option value="">All Types</option>
        @foreach (VehicleType type in ViewBag.VehicleTypes)
        {
            <option value="@type.Name">@type.Name</option>
        }
    </select>
    <br/>
    <button class="btn btn-primary" type="submit">Filter</button>
</form>
<!-- End: filter by vehicle type-->
@if (Model.FeedbackBannerMessage != null)
{
    <div class="alert alert-@Model.FeedbackBannerMessage.AlertType">
        @Model.FeedbackBannerMessage.Message
    </div>
}
@* 
<h3>Available Spots: @Model.SpotViewModel.AvailableSpots</h3>
@if (Model.SpotViewModel.AvailableSpots == 0)
{
<div class="alert alert-warning">
    The garage is full.
</div> *@


<div class="parking-slot-ctr">
    @if (Model.SpotViewModel.SpotCollection != null)
    {
        @foreach (Spot s in Model.SpotViewModel.SpotCollection)
        {
            <div class="parking-slot">
                <div class="parking-slot-bar-container">
                    @if (s.SpotAllocations != null)
                    {
                        @foreach (SpotAllocation sa in s.SpotAllocations)
                        {
                            var height = sa?.Fraction * 100 ?? 0;
                            var color = sa?.Vehicle?.Color ?? "gainsboro";
                            var regNr = sa?.Vehicle?.RegNr ?? "N/A";

                            <div class="parking-slot-bar" style="height: @(height.ToString("F0"))%; background-color: @(color);">
                                <span class="tooltip">
                                    Vehicle: @(regNr)<br/>
                                    Allocation: @(height)%
                                </span>
                            </div>
                        }
                    }
                </div>
            </div>
        }
    }
    else
    {
        <p>No spots available</p>
    }
</div>

@* <button class="disabled"> *@
@*     Park Vehicle *@
@* </button> *@
<button class="btn btn-success">
    <a asp-action="ParkVehicle" class="text-white">Park Vehicle</a>
</button>

@if (Model.UIVCModelState != UIVC_State.empty)
{

    }
}
else
{
    <h3>Selection contains no vehicles.</h3>
}