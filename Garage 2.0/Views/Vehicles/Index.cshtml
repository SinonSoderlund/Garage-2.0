@using System.Collections
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model IEnumerable<IndexViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<!-- Start: Adding Search field-->
<form asp-action="SearchByRegNumber" method="get" class="mb-3">
    <label for="search">Search by Registration number:</label>
    <div class="input-group mb-3">
        <input type="text" name="searchField" class="form-control" placeholder="Enter registration number" />
        <button class="btn btn-outline-secondary" type="submit">Search</button>
    </div>
</form>
<!-- End: Adding Search field-->

<!-- Start: Adding Sorting field-->
<div class="mb-3">
    <button onclick="location.href='@Url.Action("SortByDateAscending", "Vehicles")'" class="btn btn-primary">
        Sort by Date Ascending
    </button>
    <button onclick="location.href='@Url.Action("SortByDateDescending", "Vehicles")'" class="btn btn-primary">
        Sort by Date Descending
    </button>
</div>

<!-- End: Adding Sorting field-->

<!-- Start: filter by vehicle type-->
<form asp-action="FilterByVehicleType" method="get" class="mb-3">
    <label for="vehicleType">Filter by Vehicle Type:</label>
    <select name="vehicleType" class="form-select" id="vehicleType">
        <option value="">All Types</option>
        @foreach (var type in Enum.GetValues(typeof(Garage_2._0.VehicleType)))
        {
            <option value="@type">@type</option>
        }
    </select>
    <br />
    <button class="btn btn-primary" type="submit">Filter</button>
</form>
<!-- End: filter by vehicle type-->
<h3>Available Spots: @ViewBag.AvailableSpots</h3>
<div class="parking-slot-container"> 
    @foreach (Spot spot in ViewBag.AllSpots)
    {
    int motorcycleCount = spot.Vehicles.Count(v => v.VehicleType == VehicleType.Motorcycle);
    int totalCount = spot.Vehicles.Count;

    // Determine the background color based on vehicle count
    string bgColorClass = "btn btn-dark"; // Default color
    if (motorcycleCount > 0)
    {
    if (motorcycleCount < 3)
    {
    bgColorClass = "btn btn-warning"; // Less than 3 motorcycles
    }
    else
    {
    bgColorClass = "btn btn-danger"; // 3 or more motorcycles
    }
    }
    else if (totalCount > 0)
    {
    bgColorClass = "btn btn-danger"; // Other vehicles present
    }

    // Render the square for the spot
    <div class="@bgColorClass parking-slot"></div> <!-- Use margin for spacing -->
    }
</div>

@if (ViewBag.AvailableSpots == 0)
{
<div class="alert alert-warning">
    The garage is full.
</div>
}
else
{
<button class="btn btn-success">
    <a asp-action="ParkVehicle" class="text-white">Park Vehicle</a>
</button>
}

<partial name="_VehicleListPartial" model="@Model"/>
